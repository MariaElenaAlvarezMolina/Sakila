1. ¿Qué consulta ejecutarías para obtener todos los clientes dentro de ciudad_id = 312? 
Tu consulta debe devolver el nombre, apellido, correo electrónico y dirección del cliente.

// SELECT customer.first_name, customer.last_name, customer.email, address FROM address
JOIN customer ON customer.address_id = address.address_id
WHERE city_id = 312;

2. ¿Qué consulta ejecutarías para obtener todas las películas de comedias? 
Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento, la clasificación, las características especiales y el género (categoría).

// SELECT film.title, film.description, film.release_year, film.rating, film.special_features, category.name AS 'category' FROM film_category
LEFT JOIN category ON film_category.category_id = category.category_id
LEFT JOIN film ON film_category.film_id = film.film_id
WHERE category.name LIKE 'Comedy';

3. ¿Qué consulta ejecutarías para obtener todas las películas por actor_id=5? 
Tu consulta debe devolver el id del actor, el nombre del actor, el título de la película, la descripción y el año de lanzamiento.

// SELECT actor.actor_id, actor.first_name, actor.last_name, film.title, film.description, film.release_year FROM film_actor
LEFT JOIN film ON film_actor.film_id = film.film_id
LEFT JOIN actor ON film_actor.actor_id = actor.actor_id
WHERE actor.actor_id = 5;

4. ¿Qué consulta ejecutarías para obtener todos los clientes en store_id=1 y dentro de estas ciudades (1, 42, 312 y 459)? 
Tu consulta debe devolver el nombre, apellido, correo electrónico y dirección del cliente.

// SELECT customer.first_name, customer.last_name, customer.email, address FROM customer
LEFT JOIN store ON customer.store_id = store.store_id
LEFT JOIN address ON customer.address_id = address.address_id
WHERE store.store_id = 1 AND (city_id = 1 OR city_id = 42 OR city_id = 312 OR city_id = 459);

5. ¿Qué consulta ejecutarías para obtener todas las películas con una "calificación = G" y una "característica especial = detrás de escena", unidas por actor_id = 15?  
Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento, la clasificación y la característica especial.

// SELECT title, description, release_year, rating, special_features FROM film
LEFT JOIN film_actor ON film.film_id = film_actor.film_id
LEFT JOIN actor ON film_actor.actor_id = actor.actor_id
WHERE actor.actor_id = 15 AND rating LIKE 'G' AND (special_features LIKE '%Behind the Scenes');

6. ¿Qué consulta ejecutarías para obtener todos los actores que se unieron al film_id = 369? 
Tu consulta debe devolver film_id, título, actor_id y actor_name.

// SELECT film.film_id, film.title, actor.actor_id, actor.first_name, actor.last_name FROM film_actor
LEFT JOIN actor ON film_actor.actor_id = actor.actor_id
LEFT JOIN film ON film_actor.film_id = film.film_id
WHERE film.film_id = 369;

7. ¿Qué consulta ejecutarías para obtener todas las películas de drama con una tarifa de arriendo de 2,99? 
Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento, la clasificación, las características especiales y el género (categoría).

// SELECT film.title AS 'film title', film.description, film.release_year, film.rating, film.special_features, category.name AS 'category' FROM film_category
LEFT JOIN category ON film_category.category_id = category.category_id
LEFT JOIN film ON film_category.film_id = film.film_id
WHERE category.name LIKE 'Drama' AND rental_rate = 2.99;

8. ¿Qué consulta ejecutarías para obtener todas las películas de acción que estén unidas por SANDRA KILMER? 
Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento, la clasificación, las características especiales, el género (categoría) y el nombre y apellido del actor.

// SELECT film.title, film.description, film.release_year, film.rating, film.special_features, category.name AS 'category', actor.first_name, actor.last_name FROM film_actor
LEFT JOIN actor ON film_actor.actor_id = actor.actor_id
LEFT JOIN film_category ON film_actor.film_id = film_category.film_id
LEFT JOIN film ON film_actor.film_id = film.film_id
LEFT JOIN category ON film_category.category_id = category.category_id
WHERE category.name LIKE 'Action' AND (actor.first_name LIKE 'SANDRA' AND actor.last_name LIKE 'KILMER');